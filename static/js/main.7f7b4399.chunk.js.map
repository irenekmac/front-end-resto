{"version":3,"sources":["components/SignUp","components/LogIn","components/RestaurantNew","logo.svg","components/NavBar.js","components/Gmap.js","components/Button.js","components/RestaurantInfo.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledNav","styled","nav","NavBar","to","API_KEY","Gmap","div","props","getRestoLocation","axios","get","then","res","data","randomResto","Math","floor","random","length","setState","address","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocationError","alert","position","latitude","coords","longitude","reverseGeoCoordinates","fetch","state","response","json","console","log","catch","error","warn","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","this","onClick","src","alt","React","Component","ButtonStyles","button","Button","clicked","name","StyledInfo","RestaurantInfo","description","price","cuisine","eatout","eatin","image","getRandomResto","className","HomePage","exact","path","component","App","SignUp","LogIn","RestaurantNew","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7f7b4399.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SignUp.d41d8cd9.bin\";","module.exports = __webpack_public_path__ + \"static/media/LogIn.d41d8cd9.bin\";","module.exports = __webpack_public_path__ + \"static/media/RestaurantNew.d41d8cd9.bin\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  background: #5176A6;\n  margin: 0;\n  padding: 1em;\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    height: 100%;\n    width: auto;\n    align-items: center;\n    li {\n      box-sizing: border-box;\n      a {\n        color: #fff;\n        text-decoration: none;\n        margin: 10px;\n      }\n    }\n  }\n`\n\nconst NavBar = () => {\n\n  return (\n    <div>\n      <StyledNav>\n\n        <ul>\n          <li> <Link to='/'> HANGRY </Link> </li>\n          <li> <Link to='/login'>LOG IN</Link> </li>\n          <li> <Link to='/signup'>SIGN UP</Link> </li>\n\n      </ul>\n      </StyledNav>\n\n    </div>\n  );\n\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nconst API_KEY = \"AIzaSyCSodW9rAze3SoIql56Y6CE4Z51iMUcXKw\"\n\nconst StyledMap = styled.div`\n\n\n  border: solid #CCC 1px;\n  width: 50%;\n  margin: 0 auto;\n  margin-bottom: 2em;\n  padding: 1em;\n  line-height: 2.5vw;\n`\n\nclass Gmap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: null,\n      latitude: null,\n      longitude: null\n    };\n\n  }\n\n    getRestoLocation = () => {\n     let url = 'https://team-hangry.herokuapp.com/restaurants'\n\n     axios.get(url)\n        .then(res => {\n           let data = res.data\n           let RestoNum = Math.floor(Math.random() * data.length) //quote number\n           let randomResto = data[RestoNum] //actual quote\n           this.setState({\n              address: randomResto['address']\n           })\n        })\n  }\n\n    componentDidMount(){\n      this.getRestoLocation();\n      console.log(this.props);\n    }\n\n    getLocation = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n  } else {\n    alert(\"Geolocation is not supported by this browser.\");\n  }\n}\n\n  getCoordinates = (position) => {\n    // console.log(position.coords.latitude);\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n    })\n  }\n\n  reverseGeoCoordinates = () => {\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.latitude},${this.state.longitude}&sensor=false&key=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.warn(error))\n\n  }\n\n  handleLocationError = (error) => {\n    switch(error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\")\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\")\n        break;\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\")\n        break;\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\")\n        break;\n        default:\n        alert(\"An unknown error occurred.\")\n      }\n    }\n\n\n  render () {\n    console.warn(\"test\", this.state.address)\n\n    return (\n      <div>\n      <h1>Where u?</h1>\n\n\n      <button onClick={this.getLocation}>Where am i?</button>\n    \n      <p>Address: {this.state.address}!</p>\n      {\n        this.state.latitude && this.state.longitude ?\n        <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=16&size=500x400&sensor=false&markers=color:red%7C${this.state.latitude},${this.state.longitude}}&key=${API_KEY}`} alt='' />\n        :\n        null\n      }\n\n      </div>\n    );\n  }\n}\n\nexport default Gmap;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Gmap from './Gmap';\n\nconst ButtonStyles = styled.button`\n  background: #D66F6F;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: #fff;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  font-size: 2em;\n`;\n\nconst Button = (props) => {\n  return (\n    <ButtonStyles onClick={props.clicked}>\n      {props.name}\n    </ButtonStyles>\n  );\n\n}\n\nexport default Button;\n","import React from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport Gmap from './Gmap';\n\n\n\nconst StyledInfo = styled.div`\n\n  border: solid #CCC 1px;\n  width: 50%;\n  margin: 0 auto;\n  margin-bottom: 2em;\n  padding: 1em;\n  line-height: 2.5vw;\n`\n\nlet id = '';\n\nclass RestaurantInfo extends React.Component {\n\n  state = {\n      name: '',\n      description: '',\n      price: '',\n      address: '',\n      cuisine: '',\n      eatout: '',\n      eatin: '',\n      image: ''\n    };\n\n    getRandomResto = () => {\n     let url = 'https://team-hangry.herokuapp.com/restaurants'\n\n     axios.get(url)\n        .then(res => {\n           let data = res.data\n           let RestoNum = Math.floor(Math.random() * data.length) //quote number\n           let randomResto = data[RestoNum] //actual quote\n           this.setState({\n              name: randomResto['name'],\n              description: randomResto['description'],\n              address: randomResto['address'],\n              price: randomResto['price'],\n              cuisine: randomResto['cuisine'],\n              eatout: randomResto['eatout'],\n              eatin: randomResto['eatin'],\n              image: randomResto['image']\n           })\n        })\n  }\n\n    componentDidMount(){\n      this.getRandomResto();\n      console.log(this.props);\n    }\n\n    // componentDidUpdate(){\n    //   this.getRandomResto();\n    //   console.log(this.props);\n    // }\n\n    render() {\n\n        return (\n          <div className=\"info\">\n            <h3>Let's eat at <span>{this.state.name}</span></h3>\n\n            <StyledInfo>\n          <label>name: </label>\n          {this.state.name ? this.state.name : <p>Loading...</p>}\n          <br/>\n          <label>description: </label>\n          {this.state.description ? this.state.description : <p>Loading...</p>}\n          <br/>\n          <label>price: </label>\n          {this.state.price ? this.state.price : <p>Loading...</p>}\n          <br/>\n          <label>cuisine: </label>\n          {this.state.cuisine ? this.state.cuisine : <p>Loading...</p>}\n          <br/>\n          <label>eatout: </label>\n          {this.state.eatout ? this.state.eatout : <p>Loading...</p>}\n          <br/>\n          <label>eatin: </label>\n          {this.state.eatin ? this.state.eatin : <p>Loading...</p>}\n          <br/>\n          <img src={this.state.image}/>\n\n        </StyledInfo>\n\n        <Button name={\"another one\"} clicked={this.getRandomResto}/>\n        <Button name={\"where u?\"} clicked={this.getRandomResto}/>\n\n      </div>\n        );\n    }\n\n}\n\nexport default RestaurantInfo;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar'\nimport RestaurantInfo from './RestaurantInfo'\nimport { Route } from 'react-router-dom';\n\n\nclass HomePage extends React.Component {\n\n  render() {\n    return (\n      <div>\n\n        <NavBar />\n\n        <Route exact path='/' component={RestaurantInfo} />\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport HomePage from './components/HomePage';\nimport SignUp from './components/SignUp';\nimport LogIn from './components/LogIn';\nimport RestaurantNew from './components/RestaurantNew';\nimport RestaurantInfo from './components/RestaurantInfo';\nimport Gmap from './components/Gmap';\nimport './App.css';\nimport {Switch, BrowserRouter, Route} from 'react-router-dom'\n\n\nclass App extends React.Component {\n\n    render() {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n\n          <Switch>\n            <Route exact path='/signup' component={SignUp}/>\n            <Route exact path='/login' component={LogIn}/>\n            <Route exact path='/restaurant-new' component={RestaurantNew}/>\n            <Route exact path='/map' component={Gmap}/>\n            <Route path='/' component={HomePage}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}